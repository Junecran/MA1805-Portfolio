// Customize Key // For easy access.
let nScale = 0.01; // Noise smoothness
let ns = 8; // Noise strength



   // Noise function //
function drawLines(wavyPoints) {
  stroke(0);
  for (let i = 0; i < wavyPoints.length - 1; i++) {
    let p1 = wavyPoints[i];
    let p2 = wavyPoints[i + 1];

    // Calculate noise offsets
    let n1 = noise(p1[0] * nScale, p1[1] * nScale, frameCount * 0.01);
    let n2 = noise(p2[0] * nScale, p2[1] * nScale, frameCount * 0.01);

    let offX1 = map(n1, 0, 1, -ns, ns);
    let offY1 = map(n1, 0, 1, -ns, ns);
    let offX2 = map(n2, 0, 1, -ns, ns);
    let offY2 = map(n2, 0, 1, -ns, ns);

    // Draw line between jittered points
    line(p1[0] + offX1, p1[1] + offY1, p2[0] + offX2, p2[1] + offY2);
  }
}

   // Array to Shapes Function //
// Add 'wavey' to points to share properties of Noise function.
function drawShape(points, colour) { 
  beginShape();
  fill(colour);
  for (let i = 0; i < points.length; i++) {
    let p = points[i];
    vertex(p[0], p[1]);
  }
  endShape(CLOSE);
}







// Tree Data 
let forntRightTree = [
[409, 84], [412, 105], [418, 150], [419, 170],
[412, 180], [408, 188], [405, 196], [402, 202],
[398, 213], [394, 225], [395, 235], [397, 251],
[388, 261], [376, 270], [374, 274], [380, 277],
[393, 273], [397, 272], [404, 274], [410, 285],
[406, 302], [392, 319], [382, 335], [390, 349],
[398, 349], [419, 347], [436, 348], [450, 350],
[462, 356], [483, 356]
];
let forntRightTree2 = [
[393, 230], [390, 233], [385, 236], [380, 241],
[378, 249], [363, 249], [355, 248], [329, 253], 
[328, 261],
[306, 266], [302, 274], [296, 274], [290, 280],
[286, 281], [286, 296], [288, 305], [295, 309],
[303, 301], [304, 300], [312, 299], [317, 296], 
[329, 307], [319, 318], [320, 322], [323, 324],
[330, 334], [325, 344], [321, 348], [323, 355],
[342, 359], [375, 357], [400, 358], [428, 358],
[481, 361]
];
let forntLeftTree = [
[110, 341], [108, 333], [102, 332], [98, 334],
[93, 339], [87, 339], [82, 335], [85, 332],
[84, 328], [80, 327], [81, 322], [92, 322],
[97, 317], [97, 310], [94, 304], [85, 301],
[75, 303], [75, 294], [81, 286], [82, 282],
[80, 278], [73, 262], [73, 257], [77, 250],
[82, 238], [80, 231], [78, 225], [78, 216],
[83, 209], [85, 198], [82, 189], [84, 175],
[89, 173], [93, 169], [110, 154], [114, 148],
[121, 142], [130, 140], [140, 142], [142, 146],
[149, 153], [152, 162], [169, 172],[172, 180], 
[173, 193], [174, 201],  [171, 210], [169, 213],
[170, 224], [178, 223], [184, 226], [184, 233], 
[184, 238], [177, 246], [170, 257], [166, 257], 
[166, 264], [173, 270], [170, 278], [169, 289], 
[162, 306], [160, 315], [153, 336]
];
let backgroundTrees = [
[334, 85], [333,113], [332, 120], [334, 128],
[336, 136], [332, 141], [320, 146], [313, 149],
[311, 158], [306, 162], [304, 167], [302, 174],
[315, 184], [313, 196], [310, 206], [306, 211],
[305, 223], [301, 228], [292, 232], [289, 234],
[282, 237], [281, 240], [286, 250], [290, 253],
[303, 265]
];
let backgroundTrees2 = [
[181, 244], [189, 245], [192, 248], [187, 253],
[185, 254], [188, 258], [188, 266], [185, 269],
[185, 276], [178, 278], [173, 285]
];
let backgroundTrees3 = [
[191, 257], [196, 259], [199, 264], [206, 265],
[212, 277], [216, 280], [214, 292]
];
let backgroundTrees4 = [
[212, 269], [216, 263], [223, 258], [226, 253],
[228, 248], [229, 243], [233, 238], [241, 240],
[242, 244], [244, 248], [242, 261], [248, 266],
[250, 270], [249, 274]
];
let backgroundTrees5 = [
[292, 260], [266, 262], [248, 260], [242, 259]
];
let bush = [
[300, 358], [301, 353], [301, 349], [307, 347],
[308, 338], [289, 337], [282, 337], [276, 333],
[249, 335], [239, 334], [225, 333], [213, 335],
[213, 340], [219, 346], [222, 353]
];
let bush2 = [
[177, 334], [174, 329], [180, 324], [190, 325],
[214, 321], [217, 325], [238, 326], [236, 330]
];


   // Drawings & Outlines //
function setup() {
 createCanvas(600, 600);
}

function draw() {
  background(255);
  text(`x: ${mouseX} y: ${mouseY}`, 100, 100);

// land
line(478, 364, 324, 364);
line(324, 364, 289, 359);
line(289, 359, 181, 356);
line(181, 356, 139, 356);
line(139, 356, 108, 356);
line(108, 356, 48, 359);
// Front house roof
push();
 quad(254, 278, 262, 279, 262, 332.5, 252, 333);
 quad(262, 279, 269, 277, 269, 294, 262, 294);
 quad(262, 301, 268, 306, 268, 331.5, 262, 332.5);
pop();
// roof
push();
 quad(241, 275.1, 241, 281, 189, 319, 182, 319);
 quad(241, 275.2, 253, 286, 253, 294, 241, 281);
 quad(262, 294, 262, 301, 283, 323, 292, 323);
pop();

quad(254, 274, 262, 274, 262, 279, 254, 278.5);
quad(262, 274, 269, 274, 269, 278.5, 262, 279)
// fornt house

quad(292, 323, 289, 320, 319, 319, 321, 322);
quad(291, 325, 320, 324.5, 320, 338, 291, 339);
rect(293, 327, 5, 10);
rect(313, 326.5, 5, 10);
quad(300, 327, 311, 326.8, 311, 336.5, 300, 337);
line(242, 274.6, 290, 275);
line(189, 319, 189, 324);
line(283, 323, 283, 335);



// Secondary house
line(60, 305, 89, 305);
line(60, 305, 60, 327);
line(60, 305, 42, 277);
line(42, 277, 77, 278,);
quad(68, 307, 92, 307.5, 92, 320, 68, 319.5);
rect(70, 308.7, 3.5, 9);
rect(87, 309, 3.5, 9);
quad(75.5, 308.8, 85, 309, 85, 317.5, 75.5, 317.5);

// Church
line(200, 240, 200, 260);
line(200, 240, 229, 240);
line(205, 217, 224, 217);
line(205, 215, 224, 215);
line(200, 240, 225, 240);
line(200, 244, 225, 244);
line(205, 209, 214, 195);
line(214, 195, 214, 190);
line(221, 189, 221, 195);
line(221, 195, 224, 202.5);
line(229, 214.5, 232, 213.5);
line(229, 216.5, 232, 215.5);
line(233, 214, 223, 194);
line(223, 194, 223, 189);
line(218, 180, 218, 156);
line(215, 162, 221, 162);
line(229, 240, 236, 233);
line(236, 232, 236, 239);
line(205, 240, 205, 243);
line(210, 240, 210, 243);
line(214.5, 240, 214.5, 243);
line(220, 240, 220, 243);
line(224, 240, 224, 243);
line(200, 246, 222, 246);
line(200, 256, 220, 256);
arc(214, 226, 8, 10, PI + QUARTER_PI, TWO_PI);
line(211, 224, 211, 239);
line(218, 225, 218, 239);
rect(200, 207, 5, 33);
rect(224, 207, 5, 33);
quad(233, 206, 236.5, 205, 236, 233, 233, 236);
triangle(199, 207, 202.5, 198, 206, 207 );
triangle(223, 207, 226.5, 198, 230, 207);
triangle(232.5, 207, 235, 198.5, 237, 206);
triangle(207, 205, 210.5, 198, 211, 199);
circle(218.2, 186 ,11);
// fence
rect(67, 339, 111, 4);
rect(178, 336, 3, 20);
rect(140, 336, 3, 20);
rect(110, 336, 3, 20);
rect(65, 338, 3, 20);
// details
rect(236, 304, 9, 4);
rect(240, 308, 9, 4);
line(225, 304, 250, 304);
line(230, 308, 240, 308);




// Colour // 
push();
noStroke();
//drawShape(forntRightTree, 100, 100, 100); 
//drawShape(forntRightTree2, 100, 100 ,100);
//drawShape(forntLeftTree, 100, 100 ,100);
//drawShape(backgroundTrees, 100, 100 ,100); 
//drawShape(backgroundTrees2, 100, 100 ,100);
//drawShape(backgroundTrees3, 100, 100 ,100);
//drawShape(backgroundTrees4, 100, 100 ,100);
//drawShape(backgroundTrees5, 100, 100 ,100);
//drawShape(bush, 100, 100 ,100);
//drawShape(bush2, 100, 100 ,100);
pop();

// Drawing the data //
drawLines(forntRightTree); 
drawLines(forntRightTree2);
drawLines(forntLeftTree);
drawLines(backgroundTrees); 
drawLines(backgroundTrees2);
drawLines(backgroundTrees3);
drawLines(backgroundTrees4);
drawLines(backgroundTrees5);
drawLines(bush);
drawLines(bush2);




}