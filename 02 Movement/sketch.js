// Customize Key // For easy access.
let nScale = 0.05; // Noise smoothness
let ns = 10; // Noise strength


   // Tree Data //
let trees = [
[ // Fornt Tree
  409, 84, 412, 105, 418, 150, 419, 170,
  412, 180, 408, 188, 405, 196, 402, 202,
  398, 213, 394, 225, 395, 235, 397, 251,
  388, 261, 376, 270, 374, 274, 380, 277,
  393, 273, 397, 272, 404, 274, 410, 285,
  406, 302, 392, 319, 382, 335, 390, 349,
  398, 349, 419, 347, 436, 348, 450, 350,
  462, 356, 483, 356],

[ // Secondary Front Tree
  393, 230, 390, 233, 385, 236, 380, 241,
  378, 249, 363, 249, 329, 253, 328, 261,
  306, 266, 302, 274, 296, 274, 290, 280,
  286, 281, 286, 296, 288, 305, 295, 309,
  303, 303, 312, 300, 312, 296, 318, 290,
  325, 288, 341, 288, 342, 294, 341, 298,
  329, 307, 319, 318, 320, 322, 323, 324,
  330, 334, 325, 344, 321, 348, 323, 355,
  342, 359, 375, 357, 400, 358, 428, 358,
  481, 361],

[ // Front Left Tree
  110, 341, 108, 333, 102, 332, 98, 334,
  93, 339, 87, 339, 82, 335, 85, 332,
  84, 328, 80, 327, 81, 322, 92, 322,
  97, 317, 97, 310, 94, 304, 85, 301,
  75, 303, 75, 294, 81, 286, 82, 282,
  80, 278, 73, 262, 73, 257, 77, 250,
  82, 238, 80, 231, 78, 225, 78, 216,
  83, 209, 85, 198, 82, 189, 84, 175,
  89, 173, 93, 169, 110, 154, 114, 148,
  121, 142, 130, 140, 140, 142, 142, 146,
  149, 153, 152, 162, 169, 172, 172, 180,
  173, 193, 174, 201, 171, 210, 169, 213,
  170, 224, 178, 223, 184, 226, 184, 233,
  184, 238, 177, 246, 170, 257, 166, 257,
  166, 264, 173, 270, 170, 278, 169, 289,
  162, 306, 160, 315, 153, 336 ],

[ // Background Tree 1
  334, 85, 333, 113, 332, 120, 334, 128,
  336, 136, 332, 141, 320, 146, 313, 149,
  311, 158, 306, 162, 304, 167, 302, 174,
  315, 184, 313, 196, 310, 206, 306, 211,
  305, 223, 301, 228, 292, 232, 289, 234,
  282, 237, 281, 240, 286, 250, 290, 253,
  303, 265],

[ // Background Tree 2
  181, 244, 189, 245, 192, 248, 187, 253,
  185, 254, 188, 258, 188, 266, 185, 269,
  185, 276, 178, 278, 173, 285],

[ // Background Tree 3
  191, 257, 196, 259, 199, 264, 206, 265,
  212, 277, 216, 280, 214, 292],

  
[ // Background Tree 4
  209, 268, 218, 257, 228, 245, 233, 246,
  237, 237, 246, 234, 257, 227, 264, 229,
  270, 233, 277, 237],

[ // Bush part 1
  300, 358, 301, 353, 301, 349, 307, 347,
  308, 338, 289, 337, 282, 337, 276, 333,
  249, 335, 239, 334, 225, 333, 213, 335,
  213, 340, 219, 346, 222, 353],

[ // Bush Part 2
  177, 334, 174, 329, 180, 324, 190, 325,
  214, 321, 217, 325, 238, 326, 236, 330]
];


  
function setup() {
  createCanvas(600, 400);

}

function draw() {
  background(500);

for (let i = 0; i < trees.length; i++) {
  let coords = trees[i];
  let points = [];

for (let j = 0; j < coords.length; j += 2) {
  points.push(createVector(coords[j], coords[j + 1]));

}
  drawNoisyLine(points, i * 1000); // add seed offset
 }
}

// ðŸŒ¿ Noisy line function
function drawNoisyLine(points, seedOffset) {
  beginShape();
  for (let i = 0; i < points.length; i++) {
    let p = points[i];
    let nX = noise(p.x * 0.02, frameCount * 0.01) * 4 - 2;
    let nY = noise(p.y * 0.02, frameCount * 0.01 + seedOffset + 100) * 4 - 2;
    vertex(p.x + nX, p.y + nY);
  }
  endShape();
}

